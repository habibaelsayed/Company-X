// <auto-generated />
using System;
using Company.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20240212183437_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Company.Models.Department", b =>
                {
                    b.Property<int>("Dnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Dnum"));

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MGRSSN")
                        .HasColumnType("int");

                    b.Property<DateOnly>("MGRStartDate")
                        .HasColumnType("date");

                    b.HasKey("Dnum");

                    b.HasIndex("MGRSSN")
                        .IsUnique()
                        .HasFilter("[MGRSSN] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Company.Models.Dependant", b =>
                {
                    b.Property<int>("EmpSSN")
                        .HasColumnType("int");

                    b.Property<string>("DependantName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpSSN", "DependantName");

                    b.ToTable("Dependants");
                });

            modelBuilder.Entity("Company.Models.Employee", b =>
                {
                    b.Property<int>("SSN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SSN"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("Dno")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SuperSSN")
                        .HasColumnType("int");

                    b.HasKey("SSN");

                    b.HasIndex("Dno");

                    b.HasIndex("SuperSSN");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Company.Models.Project", b =>
                {
                    b.Property<int>("Pnum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pnum"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeptNum")
                        .HasColumnType("int");

                    b.Property<string>("PLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Pnum");

                    b.HasIndex("DeptNum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Company.Models.Works_for", b =>
                {
                    b.Property<int>("EmpSSN")
                        .HasColumnType("int");

                    b.Property<int>("Pnum")
                        .HasColumnType("int");

                    b.Property<int>("Hours")
                        .HasColumnType("int");

                    b.HasKey("EmpSSN", "Pnum");

                    b.HasIndex("Pnum");

                    b.ToTable("works_For");
                });

            modelBuilder.Entity("Company.Models.Department", b =>
                {
                    b.HasOne("Company.Models.Employee", "Manager")
                        .WithOne("ManageDept")
                        .HasForeignKey("Company.Models.Department", "MGRSSN");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Company.Models.Dependant", b =>
                {
                    b.HasOne("Company.Models.Employee", "Employee")
                        .WithMany("dependants")
                        .HasForeignKey("EmpSSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Company.Models.Employee", b =>
                {
                    b.HasOne("Company.Models.Department", "EmpDept")
                        .WithMany("Employees")
                        .HasForeignKey("Dno");

                    b.HasOne("Company.Models.Employee", "Supervisor")
                        .WithMany("Employees")
                        .HasForeignKey("SuperSSN");

                    b.Navigation("EmpDept");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Company.Models.Project", b =>
                {
                    b.HasOne("Company.Models.Department", "ProjDept")
                        .WithMany("Projects")
                        .HasForeignKey("DeptNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjDept");
                });

            modelBuilder.Entity("Company.Models.Works_for", b =>
                {
                    b.HasOne("Company.Models.Employee", "employee")
                        .WithMany("works_For")
                        .HasForeignKey("EmpSSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Models.Project", "project")
                        .WithMany("works_For")
                        .HasForeignKey("Pnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("Company.Models.Department", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Company.Models.Employee", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("ManageDept");

                    b.Navigation("dependants");

                    b.Navigation("works_For");
                });

            modelBuilder.Entity("Company.Models.Project", b =>
                {
                    b.Navigation("works_For");
                });
#pragma warning restore 612, 618
        }
    }
}
